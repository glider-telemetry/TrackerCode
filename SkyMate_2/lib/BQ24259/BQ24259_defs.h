#ifndef BQ24259_DEFS_H_
#define BQ24259_DEFS_H_

/*! CPP guard */
#ifdef __cplusplus
extern "C"
{
#endif

	/********************************************************/
	/* header includes */
#ifdef __KERNEL__
#include <linux/types.h>
#include <linux/kernel.h>
#else
#include <stdint.h>
#include <stddef.h>
#endif

/*************************** Common macros   *****************************/

#if !defined(UINT8_C) && !defined(INT8_C)
#define INT8_C(x)       S8_C(x)
#define UINT8_C(x)      U8_C(x)
#endif

#if !defined(UINT16_C) && !defined(INT16_C)
#define INT16_C(x)      S16_C(x)
#define UINT16_C(x)     U16_C(x)
#endif

#if !defined(INT32_C) && !defined(UINT32_C)
#define INT32_C(x)      S32_C(x)
#define UINT32_C(x)     U32_C(x)
#endif

#if !defined(INT64_C) && !defined(UINT64_C)
#define INT64_C(x)      S64_C(x)
#define UINT64_C(x)     U64_C(x)
#endif

/**@}*/

/**\name C standard macros */
#ifndef NULL
#ifdef __cplusplus
#define NULL   0
#else
#define NULL   ((void *) 0)
#endif
#endif

#ifndef TRUE
#define TRUE                UINT8_C(1)
#endif

#ifndef FALSE
#define FALSE               UINT8_C(0)
#endif

/********************************************************/
/**\name Macro definitions */

/**\name I2C addresses */
#define BQ24259_I2C_ADDR_PRIM	UINT8_C(0x6B)

/**\name Register Address */
#define BQ24259_INPUT_SOURCE_CONTROL_ADDR			UINT8_C(0x00)
#define BQ24259_POWER_ON_CONFIGURATION_ADDR			UINT8_C(0x01)
#define BQ24259_CHARGE_CURRENT_CONTROL_ADDR			UINT8_C(0x02)
#define BQ24259_PRE_CHARGE_TERMINATION_CONTROL_ADDR	UINT8_C(0x03)
#define BQ24259_CHARGE_VOLTAGE_CONTROL_ADDR			UINT8_C(0x04)
#define BQ24259_TERMINATION_TIMER_CONTROL_ADDR		UINT8_C(0x05)
#define BQ24259_BOOST_THERMAL_REG_CONTROL_ADDR		UINT8_C(0x06)
#define BQ24259_MISC_OPERATION_CONTROL_ADDR			UINT8_C(0x07)
#define BQ24259_SYSTEM_STATUS_ADDR					UINT8_C(0x08)
#define BQ24259_NEW_FAULT_ADDR						UINT8_C(0x09)

/**\name Input Source Control macros */
#define BQ24259_HIGH_IMPEDANCE_MODE					UINT8_C(0x80)

#define BQ24259_INPUT_VOLTAGE_LIMIT_640				UINT8_C(0X40)
#define BQ24259_INPUT_VOLTAGE_LIMIT_320				UINT8_C(0X20)
#define BQ24259_INPUT_VOLTAGE_LIMIT_160				UINT8_C(0X08)
#define BQ24259_INPUT_VOLTAGE_LIMIT_80				UINT8_C(0X04)

#define BQ24259_INPUT_VOLTAGE_LIMIT_DEFAULT			UINT8_C(0X30)
#define BQ24259_INPUT_VOLTAGE_LIMIT_MASK			UINT8_C(0X78)

#define BQ24259_INPUT_CURRENT_LIMIT_100				UINT8_C(0X00)
#define BQ24259_INPUT_CURRENT_LIMIT_150				UINT8_C(0X01)
#define BQ24259_INPUT_CURRENT_LIMIT_500				UINT8_C(0X02)
#define BQ24259_INPUT_CURRENT_LIMIT_900				UINT8_C(0X03)
#define BQ24259_INPUT_CURRENT_LIMIT_1000			UINT8_C(0X04)
#define BQ24259_INPUT_CURRENT_LIMIT_1500			UINT8_C(0X05)
#define BQ24259_INPUT_CURRENT_LIMIT_2000			UINT8_C(0X06)
#define BQ24259_INPUT_CURRENT_LIMIT_3000			UINT8_C(0X07)

#define BQ24259_INPUT_CURRENT_LIMIT_MASK			UINT8_C(0X07)

/**\name Power On Configuration macros */
#define BQ24259_REGISTER_RESET						UINT8_C(0x80)

#define BQ24259_WATCHDOG_TIMER_RESET				UINT8_C(0x40)

#define BQ24259_OTG_CONFIG							UINT8_C(0x20)
#define BQ24259_CHG_CONFIG							UINT8_C(0x10)

#define BQ24259_MIN_SYSTEM_VOLTAGE_0_4V				UINT8_C(0x08)
#define BQ24259_MIN_SYSTEM_VOLTAGE_0_2V				UINT8_C(0x04)
#define BQ24259_MIN_SYSTEM_VOLTAGE_0_1V				UINT8_C(0x02)

#define BQ24259_BOOST_LIM							UINT8_C(0x01)

/**\name Charge Current Control macros */
#define BQ24259_CHARGE_CURRENT_1024					UINT8_C(0x40)
#define BQ24259_CHARGE_CURRENT_512					UINT8_C(0x20)
#define BQ24259_CHARGE_CURRENT_256					UINT8_C(0x10)
#define BQ24259_CHARGE_CURRENT_128					UINT8_C(0x08)
#define BQ24259_CHARGE_CURRENT_64					UINT8_C(0x04)

#define BQ24259_COLD_BOOST_MODE						UINT8_C(0x02)
#define BQ24259_FORCE_20PCT							UINT8_C(0x01)

/**\name Pre-Charge/Termination Current Control macros */
#define BQ24259_PRE_CHARGE_CURRENT_0128				UINT8_C(0x10)
#define BQ24259_PRE_CHARGE_CURRENT_0256				UINT8_C(0x20)
#define BQ24259_PRE_CHARGE_CURRENT_0384				UINT8_C(0x30)
#define BQ24259_PRE_CHARGE_CURRENT_0512				UINT8_C(0x40)
#define BQ24259_PRE_CHARGE_CURRENT_0768				UINT8_C(0x50)
#define BQ24259_PRE_CHARGE_CURRENT_0896				UINT8_C(0x60)
#define BQ24259_PRE_CHARGE_CURRENT_1024				UINT8_C(0x70)
#define BQ24259_PRE_CHARGE_CURRENT_1152				UINT8_C(0x80)
#define BQ24259_PRE_CHARGE_CURRENT_1280				UINT8_C(0x90)
#define BQ24259_PRE_CHARGE_CURRENT_1408				UINT8_C(0xA0)
#define BQ24259_PRE_CHARGE_CURRENT_1536				UINT8_C(0xB0)
#define BQ24259_PRE_CHARGE_CURRENT_1664				UINT8_C(0xC0)
#define BQ24259_PRE_CHARGE_CURRENT_1792				UINT8_C(0xD0)
#define BQ24259_PRE_CHARGE_CURRENT_1920				UINT8_C(0xE0)
#define BQ24259_PRE_CHARGE_CURRENT_2048				UINT8_C(0xF0)

#define BQ24259_PRE_CHARGE_CURRENT_MASK				UINT8_C(0xF0)

#define BQ24259_TERMINATION_CURRENT_LIMIT_512		UINT8_C(0x04)
#define BQ24259_TERMINATION_CURRENT_LIMIT_256		UINT8_C(0x02)
#define BQ24259_TERMINATION_CURRENT_LIMIT_128		UINT8_C(0x01)

/**\name Charge Voltage Control macros */
#define BQ24259_CHARGE_VOLTAGE_CONTROL_512			UINT8_C(0x80)
#define BQ24259_CHARGE_VOLTAGE_CONTROL_256			UINT8_C(0x40)
#define BQ24259_CHARGE_VOLTAGE_CONTROL_128			UINT8_C(0x20)
#define BQ24259_CHARGE_VOLTAGE_CONTROL_64			UINT8_C(0x10)
#define BQ24259_CHARGE_VOLTAGE_CONTROL_32			UINT8_C(0x08)
#define BQ24259_CHARGE_VOLTAGE_CONTROL_16			UINT8_C(0x04)

#define BQ24259_BATT_LOW_VOLTAGE					UINT8_C(0x02)
#define BQ24259_BATT_RECHARGE_THRESHOLD				UINT8_C(0x01)

/**\name Charge Termination/Time Control macros */
#define BQ24259_CHARGE_TERMINATION_ENABLE			UINT8_C(0x80)

#define BQ24259_WATCHDOG_TIMER_DISABLED				UINT8_C(0x00)
#define BQ24259_WATCHDOG_TIMER_40S					UINT8_C(0x10)
#define BQ24259_WATCHDOG_TIMER_80S					UINT8_C(0x20)
#define BQ24259_WATCHDOG_TIMER_160S					UINT8_C(0x30)

#define BQ24259_WATCHDOG_TIMER_MASK					UINT8_C(0x30)

#define BQ24259_CHARGE_SAFETY_TIMER					UINT8_C(0x08)

#define BQ24259_FAST_CHARGE_TIMER_5					UINT8_C(0x00)
#define BQ24259_FAST_CHARGE_TIMER_8					UINT8_C(0x02)
#define BQ24259_FAST_CHARGE_TIMER_12				UINT8_C(0x04)
#define BQ24259_FAST_CHARGE_TIMER_20				UINT8_C(0x06)

#define BQ24259_FAST_CHARGE_TIMER_MASK				UINT8_C(0x06)

/**\name Boost Voltage/Thermal Regulation Control macros */
#define BQ24259_BOOST_VOLTAGE_512					UINT8_C(0x80)
#define BQ24259_BOOST_VOLTAGE_256					UINT8_C(0x40)
#define BQ24259_BOOST_VOLTAGE_128					UINT8_C(0x20)
#define BQ24259_BOOST_VOLTAGE_64					UINT8_C(0x10)

#define BQ24259_BOOST_MODE_TEMP_55					UINT8_C(0x00)
#define BQ24259_BOOST_MODE_TEMP_60					UINT8_C(0x04)
#define BQ24259_BOOST_MODE_TEMP_65					UINT8_C(0x08)
#define BQ24259_BOOST_MODE_TEMP_DISABLE				UINT8_C(0x0C)

#define BQ24259_BOOST_MODE_TEMP_MASK				UINT8_C(0x0C)

/**\name Misc Operation Control macros */
#define BQ24259_FORCE_DPDM_DETECTION				UINT8_C(0x80)
#define BQ24259_DPM_SAFETY_TIMER					UINT8_C(0x40)
#define BQ24259_BATFET_DISABLE						UINT8_C(0x20)

#define BQ24259_CHARGE_FAULT_INT					UINT8_C(0x02)
#define BQ24259_BATT_FAULT_INT						UINT8_C(0x01)

/**\name System Status macros */
#define BQ24259_VBUS_STATE_UNKOWN					UINT8_C(0x00)
#define BQ24259_VBUS_STATE_USB_HOST					UINT8_C(0x40)
#define BQ24259_VBUS_STATE_ADAPTER_PORT				UINT8_C(0x80)
#define BQ24259_VBUS_STATE_UNKOWN					UINT8_C(0xC0)

#define BQ24259_VBUS_STATE_MASK						UINT8_C(0xC0)

#define BQ24259_CHARGE_STATE_NOT_CHARGING			UINT8_C(0x00)
#define BQ24259_CHARGE_STATE_PRE_CHARGE				UINT8_C(0x10)
#define BQ24259_CHARGE_STATE_FAST_CHARGE			UINT8_C(0x20)
#define BQ24259_CHARGE_STATE_DONE					UINT8_C(0x30)

#define BQ24259_CHARGE_STATE_MASK					UINT8_C(0x30)
#define BQ24259_CHARGE_STATE_POSN					UINT8_C(0x04)

#define BQ24259_DPM_STATE							UINT8_C(0x08)
#define BQ24259_PG_STATE							UINT8_C(0x04)
#define BQ24259_THERMAL_REGULATION_STATE			UINT8_C(0x02)
#define BQ24259_VSYS_STAT							UINT8_C(0x01)

/**\name New Fault register macros */
#define BQ24259_WATCHDOG_FAULT						UINT8_C(0x80)
#define BQ24259_OTG_FAULT							UINT8_C(0x40)

#define BQ24259_CHARGE_FAULT_INPUT_FAULT			UINT8_C(0x10)
#define BQ24259_CHARGE_FAULT_THERMAL_SHUTDOWN		UINT8_C(0x20)
#define BQ24259_CHARGE_FAULT_TIMER_EXPIRATION		UINT8_C(0x30)

#define BQ24259_CHARGE_FAULT_MASK					UINT8_C(0x30)

#define BQ24259_BATT_FAULT							UINT8_C(0x08)
#define BQ24259_NTC_FAULT_COLD						UINT8_C(0x02)
#define BQ24259_NTC_FAULT_HOT						UINT8_C(0x01)

#ifdef __cplusplus
}
#endif /* End of CPP guard */

#endif